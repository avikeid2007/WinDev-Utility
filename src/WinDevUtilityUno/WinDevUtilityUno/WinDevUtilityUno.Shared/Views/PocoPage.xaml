<Page
    x:Class="WinDevUtilityUno.Views.PocoPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:ic="using:Microsoft.Xaml.Interactions.Core"
    xmlns:local="using:WinDevUtilityUno.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:richText="using:RichTextControls"
    xmlns:wasm="http://uno.ui/wasm"
    xmlns:win="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
    mc:Ignorable="d wasm">

    <Grid x:Name="ContentArea" Margin="{StaticResource MediumLeftTopRightBottomMargin}">
        <Grid Background="Transparent">
            <Grid.RowDefinitions>
                <RowDefinition Height="3*" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="2*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid Margin="8">
                <Grid.RowDefinitions>

                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <CommandBar DefaultLabelPosition="Right" IsSticky="True">
                    <AppBarButton
                        Command="{x:Bind VM.TypeCommand}"
                        CommandParameter="string"
                        Label="String">
                        <AppBarButton.Icon>
                            <FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="&#xe84b;" />
                        </AppBarButton.Icon>
                    </AppBarButton>
                    <AppBarButton
                        Command="{x:Bind VM.TypeCommand}"
                        CommandParameter="int"
                        Label="Int">
                        <AppBarButton.Icon>
                            <FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="&#xf151;" />
                        </AppBarButton.Icon>
                    </AppBarButton>
                    <AppBarButton
                        Command="{x:Bind VM.TypeCommand}"
                        CommandParameter="bool"
                        Label="Bool">
                        <AppBarButton.Icon>
                            <FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="&#xe73a;" />
                        </AppBarButton.Icon>
                    </AppBarButton>
                    <AppBarButton
                        Command="{x:Bind VM.TypeCommand}"
                        CommandParameter="Visibility"
                        Label="Visibility">
                        <AppBarButton.Icon>
                            <FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="&#xf19d;" />
                        </AppBarButton.Icon>
                    </AppBarButton>
                    <AppBarButton
                        Command="{x:Bind VM.TypeCommand}"
                        CommandParameter="List&lt;&gt;"
                        Label="List">
                        <AppBarButton.Icon>
                            <FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="&#xe8bc;" />
                        </AppBarButton.Icon>
                    </AppBarButton>
                    <AppBarButton
                        Command="{x:Bind VM.TypeCommand}"
                        CommandParameter="ObservableCollection&lt;&gt;"
                        Label="ObservableCollection">
                        <AppBarButton.Icon>
                            <FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="&#xe9d5;" />
                        </AppBarButton.Icon>
                    </AppBarButton>
                </CommandBar>

                <TextBox
                    x:Name="TxtPocoInput"
                    Grid.Row="1"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    AcceptsReturn="True"
                    BorderBrush="#ccc"
                    CornerRadius="8"
                    FontSize="{StaticResource MediumFontSize}"
                    PlaceholderText="{Binding PlaceHolder}"
                    TabIndex="0"
                    Text="{x:Bind VM.InputText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    TextWrapping="Wrap">
                    <TextBox.Shadow>
                        <ThemeShadow />
                    </TextBox.Shadow>
                </TextBox>
            </Grid>

            <Grid
                x:Name="GridPocoSetting"
                Grid.RowSpan="2"
                Grid.Column="1"
                Margin="{StaticResource XSmallLeftTopRightBottomMargin}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <StackPanel
                    Padding="{StaticResource XSmallLeftTopRightBottomMargin}"
                    BorderBrush="#ccc"
                    BorderThickness="1"
                    CornerRadius="8">
                    <TextBlock
                        Margin="{StaticResource XXSmallTopBottomMargin}"
                        FontSize="{StaticResource MediumFontSize}"
                        FontWeight="Medium"
                        Text="Supported Formats:" />
                    <TextBlock Margin="{StaticResource XXSmallLeftRightMargin}" Text="string UserName" />
                    <TextBlock Margin="{StaticResource XXSmallLeftRightMargin}" Text="public string UserName" />
                    <TextBlock Margin="{StaticResource XXSmallLeftRightMargin}" Text="public string UserName { get; set; }" />
                </StackPanel>
                <Grid
                    Grid.Row="1"
                    Margin="{StaticResource XSmallTopMargin}"
                    Padding="{StaticResource XSmallLeftTopRightBottomMargin}"
                    BorderBrush="#ccc"
                    BorderThickness="1"
                    CornerRadius="8">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto" />
                        <ColumnDefinition Width="48" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <TextBlock
                        Margin="{StaticResource XXSmallTopBottomMargin}"
                        FontSize="{StaticResource MediumFontSize}"
                        FontWeight="Medium"
                        Text="POCO Setting:" />
                    <TextBlock
                        Grid.Row="1"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Center"
                        FontSize="{StaticResource MediumFontSize}"
                        FontWeight="Medium"
                        Text="Include Property Changed Event" />

                    <ToggleSwitch
                        x:Name="TglPropertyChange"
                        Grid.Row="1"
                        Grid.Column="1"
                        Margin="{StaticResource XSmallLeftMargin}"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        IsOn="{x:Bind VM.IsIncludePropertyChange, Mode=TwoWay}"
                        OffContent=""
                        OnContent="" />
                    <TextBlock
                        Grid.Row="2"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Center"
                        FontSize="{StaticResource MediumFontSize}"
                        FontWeight="Medium"
                        Text="Prism Property Changed Event" />

                    <ToggleSwitch
                        x:Name="TglPrism"
                        Grid.Row="2"
                        Grid.Column="1"
                        Margin="{StaticResource XSmallLeftMargin}"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        IsEnabled="{Binding IsIncludePropertyChange, Mode=OneWay}"
                        IsOn="{x:Bind VM.IsPrism, Mode=TwoWay}"
                        OffContent=""
                        OnContent="" />

                    <TextBlock
                        Grid.Row="3"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Center"
                        FontSize="{StaticResource MediumFontSize}"
                        FontWeight="Medium"
                        Text="Include Dirty Check" />


                    <ToggleSwitch
                        x:Name="TglDirty"
                        Grid.Row="3"
                        Grid.Column="1"
                        Margin="{StaticResource XSmallLeftMargin}"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        IsOn="{x:Bind VM.IsDirtyCheck, Mode=TwoWay}"
                        OffContent=""
                        OnContent="" />
                    <TextBlock
                        Grid.Row="4"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Center"
                        FontSize="{StaticResource MediumFontSize}"
                        FontWeight="Medium"
                        Text="Generate Class" />


                    <ToggleSwitch
                        Grid.Row="4"
                        Grid.Column="1"
                        Margin="{StaticResource XSmallLeftMargin}"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        IsOn="{x:Bind VM.IsGenerateClass, Mode=TwoWay}"
                        OffContent=""
                        OnContent="" />

                </Grid>
                <Grid
                    Grid.Row="2"
                    Margin="{StaticResource XSmallTopMargin}"
                    Padding="{StaticResource XSmallLeftTopRightBottomMargin}"
                    BorderBrush="#ccc"
                    BorderThickness="1"
                    CornerRadius="8">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <TextBlock
                        Margin="{StaticResource XXSmallTopBottomMargin}"
                        FontSize="{StaticResource MediumFontSize}"
                        FontWeight="Medium"
                        Text="Class Configuration:" />


                    <TextBox
                        Grid.Row="1"
                        Margin="{StaticResource XXSmallTopBottomMargin}"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Center"
                        CornerRadius="8"
                        FontSize="16"
                        IsEnabled="{x:Bind VM.IsGenerateClass, Mode=OneWay}"
                        PlaceholderText="Class name i.e. User"
                        Text="{x:Bind VM.ClassName, Mode=TwoWay}">
                        <TextBox.Header>
                            <TextBlock
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Center"
                                FontSize="12"
                                FontWeight="Medium"
                                Text="Class Name" />
                        </TextBox.Header>
                    </TextBox>
                    <TextBox
                        Grid.Row="2"
                        Margin="0,4"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Center"
                        CornerRadius="8"
                        FontSize="16"
                        IsEnabled="{Binding IsGenerateClass, Mode=OneWay}"
                        PlaceholderText="Namespace i.e. MyProject.Models"
                        Text="{x:Bind VM.Namespace, Mode=TwoWay}">
                        <TextBox.Header>
                            <TextBlock
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Center"
                                FontSize="12"
                                FontWeight="Medium"
                                Text="Namespace (Optional)" />
                        </TextBox.Header>
                    </TextBox>
                    <TextBox
                        Grid.Row="3"
                        Margin="0,4"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Center"
                        CornerRadius="8"
                        FontSize="16"
                        IsEnabled="{Binding IsGenerateClass, Mode=OneWay}"
                        PlaceholderText="Class name i.e. MyProject.Base1"
                        Text="{x:Bind VM.BaseClass, Mode=TwoWay}">
                        <TextBox.Header>
                            <TextBlock
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Center"
                                FontSize="12"
                                FontWeight="Medium"
                                Text="Base Class (Optional)" />
                        </TextBox.Header>
                    </TextBox>
                </Grid>
            </Grid>


            <Grid
                x:Name="GridPocoButtons"
                Grid.Row="1"
                Margin="16,0,16,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Button
                    Height="60"
                    HorizontalAlignment="Stretch"
                    Background="DodgerBlue"
                    Command="{x:Bind VM.GeneratePropertiesCommand}"
                    CornerRadius="4">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            FontFamily="{StaticResource SymbolThemeFontFamily}"
                            FontSize="{StaticResource SemiLargeFontSize}"
                            Foreground="White"
                            Text="&#xF133;" />
                        <TextBlock
                            Margin="{StaticResource XSmallLeftRightMargin}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            FontSize="{StaticResource MediumFontSize}"
                            FontWeight="Medium"
                            Foreground="White"
                            Text="Generate" />
                    </StackPanel>
                </Button>
                <Button
                    Grid.Column="1"
                    Height="60"
                    Margin="{StaticResource SmallLeftMargin}"
                    HorizontalAlignment="Stretch"
                    Background="Tomato"
                    Command="{x:Bind VM.CopyCommand}"
                    CornerRadius="4">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            FontFamily="{StaticResource SymbolThemeFontFamily}"
                            FontSize="{StaticResource SemiLargeFontSize}"
                            Foreground="White"
                            Text="&#xE8C8;" />
                        <TextBlock
                            Margin="{StaticResource XSmallLeftRightMargin}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            FontSize="{StaticResource MediumFontSize}"
                            FontWeight="Medium"
                            Foreground="White"
                            Text="Copy" />
                    </StackPanel>
                </Button>
                <Button
                    Grid.Column="2"
                    Height="60"
                    Margin="{StaticResource SmallLeftMargin}"
                    HorizontalAlignment="Stretch"
                    Background="MediumSeaGreen"
                    Command="{x:Bind VM.ExportCommand}"
                    CornerRadius="4">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            FontFamily="{StaticResource SymbolThemeFontFamily}"
                            FontSize="{StaticResource SemiLargeFontSize}"
                            Foreground="White"
                            Text="&#xED25;" />
                        <TextBlock
                            Margin="{StaticResource XSmallLeftRightMargin}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            FontSize="{StaticResource MediumFontSize}"
                            FontWeight="Medium"
                            Foreground="White"
                            Text="Export" />
                    </StackPanel>
                </Button>
                <Button
                    Grid.Column="3"
                    Height="60"
                    Margin="{StaticResource SmallLeftMargin}"
                    HorizontalAlignment="Stretch"
                    Background="Orange"
                    Command="{x:Bind VM.ClearCommand}"
                    CornerRadius="4">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            FontFamily="{StaticResource SymbolThemeFontFamily}"
                            FontSize="{StaticResource SemiLargeFontSize}"
                            Foreground="White"
                            Text="&#xE8E6;" />
                        <TextBlock
                            Margin="{StaticResource XSmallLeftRightMargin}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            FontSize="{StaticResource MediumFontSize}"
                            FontWeight="Medium"
                            Foreground="White"
                            Text="Clear" />
                    </StackPanel>
                </Button>
            </Grid>
            <Grid
                x:Name="GridPocoOutput"
                Grid.Row="2"
                Grid.ColumnSpan="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <wasm:ScrollViewer
                    Margin="{StaticResource XSmallLeftTopRightBottomMargin}"
                    BorderBrush="#ccc"
                    BorderThickness="1"
                    CornerRadius="8">
                    <TextBox
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        AcceptsReturn="True"
                        BorderBrush="#ccc"
                        CornerRadius="8"
                        FontSize="{StaticResource MediumFontSize}"
                        TabIndex="0"
                        Text="{x:Bind VM.OutputText, Mode=OneWay}"
                        TextWrapping="Wrap" />
                    <!--<wasm:TextBox.Shadow>
                            <ThemeShadow />
                        </wasm:TextBox.Shadow>-->

                </wasm:ScrollViewer>
                <win:ScrollViewer
                    Margin="{StaticResource XSmallLeftTopRightBottomMargin}"
                    BorderBrush="#ccc"
                    BorderThickness="1"
                    CornerRadius="8">
                    <richText:CodeHighlightedTextBlock
                        x:Name="CodeHighlightedPreviewTextBlock"
                        Margin="0"
                        BorderBrush="#ccc"
                        BorderThickness="1"
                        Code="{x:Bind VM.OutputText, Mode=OneWay}"
                        CornerRadius="8"
                        HighlightLanguage="CSharp" />
                </win:ScrollViewer>
            </Grid>
        </Grid>
        <i:Interaction.Behaviors>
            <ic:EventTriggerBehavior EventName="KeyDown">
                <ic:InvokeCommandAction Command="{x:Bind VM.KeyDownCommand}" />
            </ic:EventTriggerBehavior>
        </i:Interaction.Behaviors>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="AdaptiveVisualStateGroup">
                <VisualState x:Name="VisualStateNarrow">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NarrowMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--<Setter Target="SearchListRow.Height" Value="100"/>-->
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateNormal">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NormalMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="GridPocoOutput.(Grid.ColumnSpan)" Value="1" />
                        <Setter Target="GridPocoSetting.(Grid.RowSpan)" Value="3" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateWide">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource WideMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters />
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</Page>
